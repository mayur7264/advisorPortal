{"version":3,"sources":["component/Login.js","component/Navbar.js","component/Register.js","component/Home.js","component/ClientManagement.js","component/InsuranceManagement.js","component/ViewClient.js","component/AddClient.js","component/AllocatePlan.js","component/NotFoundSection.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","handleClick","setState","loadRegister","handleChange","event","target","value","name","loginform","state","validateField","login","axios","get","then","response","console","log","data","loginState","map","Number","agentNo","password","filter","length","sessionStorage","setItem","loadHome","errorMessage","window","location","reload","catch","error","message","clear","handleSubmit","preventDefault","fieldName","fieldValidationErrors","loginformErrorMessage","formValid","loginformValid","match","buttonActive","successMessage","isLoggedIn","this","to","classes","id","className","Paper","paper","elevation","Avatar","avatar","onSubmit","htmlFor","type","onChange","placeholder","disabled","onClick","Component","withStyles","theme","marginTop","spacing","marginBottom","display","flexDirection","alignItems","padding","margin","backgroundColor","Navbar","getItem","Register","registerform","register","post","alert","isRegister","registerformErrorMessage","registerformValid","email","cpassword","dob","marginLeft","Home","handleClient","isClient","handleInsurance","isInsurance","style","color","src","alt","height","width","ClientManagement","handleView","isView","handleAdd","isAdd","InsuranceManagement","view","insuranceData","errorMsg","componentDidMount","handleAllocate","isAllocate","displayInsurance","insuranceArray","insurance","element","companyname","cover","policyperiod","premium","payfor","memberscovered","image","insId","push","ViewClient","clientData","displayClient","clientArray","client","age","contactno","activePlans","plan","monthlyContribution","clientId","searchValue","searchData","handleSearch","isSearch","sData","handleAll","AddClient","clientform","add","clientformErrorMessage","clientformValid","Date","activeplans","monthlycontribution","AllocatePlan","allocateform","allocate","loadinsurance","allocateformErrorMessage","allocateformValid","clientName","NotFoundSection","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c18960b7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    \r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginBottom: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: 'red',\r\n    },\r\n\r\n    \r\n    \r\n  });\r\n\r\n\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loginform: {\r\n                agentNo: \"\",\r\n                password: \"\"\r\n            },\r\n            loginformErrorMessage: {\r\n                agentNo: \"\",\r\n                password: \"\"\r\n            },\r\n            loginformValid: {\r\n                agentNo: false,\r\n                password: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            loadHome: false,\r\n            loadRegister: false,\r\n            isLoggedIn: false\r\n            \r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({ loadRegister: true })\r\n    }\r\n\r\n\r\n    \r\n\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        const { loginform } = this.state;\r\n        this.setState({\r\n            loginform: { ...loginform, [name]: value }\r\n        });\r\n        this.validateField(name, value);\r\n        // console.log(this.state.loginform[name], name);\r\n    }\r\n\r\n    login = () => {\r\n        const { loginform } = this.state;\r\n        \r\n        \r\n        \r\n        axios.get('/loginDB.json')\r\n            .then(response => {\r\n            \r\n                console.log(response.data)\r\n                let data = response.data;\r\n                const myData = data.map(login=>{\r\n                                if(Number(login.agentNo)===Number(loginform.agentNo) && login.password===loginform.password){\r\n                                    return true\r\n                                }else{\r\n                                    return false\r\n                                }\r\n                                })\r\n            \r\n                let loginState = myData.filter(data=>data===true)\r\n                if(loginState.length === 0) loginState=false\r\n                \r\n                if(loginState){\r\n                    sessionStorage.setItem(\"isLoggedIn\",true)\r\n                    this.setState({ loadHome: true,errorMessage:''})\r\n                    window.location.reload();\r\n                }else{\r\n                    this.setState({errorMessage:\"Invalid Credentials\"})\r\n                }\r\n                \r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.errorMessage = error.message;\r\n                sessionStorage.clear();\r\n            })\r\n        console.log(this.state.loginform.agentNo, this.state.loginform.password);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        \r\n        this.login();\r\n    }\r\n\r\n    \r\n\r\n    validateField = (fieldName, value) => {\r\n        let fieldValidationErrors = this.state.loginformErrorMessage;\r\n        let formValid = this.state.loginformValid;\r\n        switch (fieldName) {\r\n            case \"agentNo\":\r\n                let cnoRegex = /^[1-7]\\d{7}$/\r\n                if (!value || value === \"\") {\r\n                    fieldValidationErrors.agentNo = \"Please enter your Agent Number\";\r\n                    formValid.agentNo = false;\r\n                } else if (!value.match(cnoRegex)) {\r\n                    fieldValidationErrors.agentNo = \"Agent number should be a valid 8 digit number\";\r\n                    formValid.agentNo = false;\r\n                } else {\r\n                    fieldValidationErrors.agentNo = \"\";\r\n                    formValid.agentNo = true;\r\n                }\r\n                break;\r\n            case \"password\":\r\n                if (!value || value === \"\") {\r\n                    fieldValidationErrors.password = \"Password is manadatory\";\r\n                    formValid.password = false;\r\n                     } else if (!(value.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{7,20})/) )) {\r\n                            fieldValidationErrors.password = \"Please Enter a valid password\"  //Password must contain atleast 1 Uppercase letter 1 Lowecase letter 1 digit and 1 Special Character\r\n                            formValid.password = false;\r\n                } else {\r\n                    fieldValidationErrors.password = \"\";\r\n                    formValid.password = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        formValid.buttonActive = formValid.agentNo && formValid.password;\r\n        this.setState({\r\n            loginformErrorMessage: fieldValidationErrors,\r\n            loginformValid: formValid,\r\n            successMessage: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loadHome === true) return <Redirect to={'/home'} />\r\n        if (this.state.loadRegister === true) return <Redirect to={'/register'} />\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <section id=\"loginPage\" className=\"loginSection\">    \r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 offset-4 \">\r\n                            <Paper className={classes.paper} elevation={6}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <LockOutlinedIcon />\r\n                                </Avatar>\r\n                                <h4>Login</h4>\r\n                            \r\n                                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uagentNo\">Agent Number<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"number\"\r\n                                            value={this.state.loginform.agentNo}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uagentNo\"\r\n                                            name=\"agentNo\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Agent Number\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.loginformErrorMessage.agentNo ? (<span className=\"text-danger\">\r\n                                        {this.state.loginformErrorMessage.agentNo}\r\n                                    </span>)\r\n                                        : null}\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uPass\">Password<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            value={this.state.loginform.password}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uPass\"\r\n                                            name=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter password\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.loginformErrorMessage.password ? (<span className=\"text-danger\">\r\n                                        {this.state.loginformErrorMessage.password}\r\n                                    </span>)\r\n                                        : null}<br />\r\n                                    <span><span className=\"text-danger\">*</span> marked feilds are mandatory</span>\r\n                                    <br />\r\n                                    \r\n\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        disabled={!this.state.loginformValid.buttonActive}\r\n                                        className=\"btn btn-primary\"\r\n                                    >\r\n                                        Login\r\n                                    </button>\r\n\r\n                                    <br/><span className=\"text-danger\">{this.state.errorMessage}</span>\r\n\r\n                                </form>\r\n                                <br />\r\n                                \r\n                                <button className=\"btn btn-primary\" onClick={this.handleClick} >Click here to Register</button>\r\n                                </Paper>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </section>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Login);","import React,{Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navbar extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isLoggedIn:sessionStorage.getItem('isLoggedIn')\r\n        }\r\n      \r\n    }\r\n\r\n    handleClick =()=>{\r\n        sessionStorage.clear();\r\n        window.location.reload();\r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.isLoggedIn){\r\n            return (<div>\r\n                <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n              \r\n              <div className=\"navbar-header\">\r\n                  <Link className=\"navbar-brand\" to=\"/home\">Advisor Portal</Link>\r\n              </div>\r\n              \r\n\r\n              <ul className=\"navbar-nav\">\r\n              <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/home\">Home</Link>\r\n                      </li>\r\n\r\n\r\n                      <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/home/clientmanagement\">Client Management</Link>\r\n                      </li>\r\n\r\n                      <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/home/insurancemanagement\">Insurance Management</Link>\r\n                      </li>\r\n\r\n\r\n              </ul>\r\n\r\n              <ul className=\"navbar-nav ml-auto\">\r\n\r\n                \r\n                    <li className=\"nav-item\">\r\n                      <Link className=\"nav-link\" to=\"/\" onClick={this.handleClick}>Logout</Link>\r\n                      </li>\r\n                       \r\n              </ul>\r\n            \r\n          </nav>\r\n            </div>)\r\n        }else{\r\n            return(<div>\r\n                <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\r\n              \r\n              <div className=\"navbar-header\">\r\n                  <Link className=\"navbar-brand\" to=\"/home\">Advisor Portal</Link>\r\n              </div>\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                    </li>\r\n                  \r\n              </ul>\r\n            \r\n          </nav>\r\n            </div>)\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Navbar;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    \r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginBottom: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      \r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: 'red',\r\n      marginLeft:'275px'\r\n    },\r\n\r\n    \r\n    \r\n  });\r\n\r\n\r\n\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            registerform: {\r\n                agentNo: \"\",\r\n                password: \"\",\r\n                name:\"\",\r\n                dob:\"\",\r\n                email:\"\",\r\n                cpassword:\"\"\r\n\r\n            },\r\n            registerformErrorMessage: {\r\n                agentNo: \"\",\r\n                password: \"\",\r\n                name:\"\",\r\n                dob:\"\",\r\n                email:\"\",\r\n                cpassword:\"\"\r\n            },\r\n            registerformValid: {\r\n                agentNo: false,\r\n                password: false,\r\n                name: false,\r\n                dob: false,\r\n                email: false,\r\n                cpassword:false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            \r\n            \r\n            isRegister:false\r\n            \r\n        }\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.setState({ loadRegister: true })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        const { registerform } = this.state;\r\n        this.setState({\r\n            registerform: { ...registerform, [name]: value }\r\n        });\r\n        this.validateField(name, value);\r\n        // console.log(this.state.registerform[name], name);\r\n    }\r\n\r\n    register = () => {\r\n        const { registerform } = this.state;\r\n        axios.post('/register', registerform)\r\n            .then(response => {\r\n                console.log(response);\r\n                \r\n                \r\n                sessionStorage.setItem(\"userName\", response.data.name);;\r\n                this.setState({ loadHome: true})\r\n                window.location.reload();\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.errorMessage = error.message;\r\n                sessionStorage.clear();\r\n            })\r\n        console.log(this.state.registerform.agentNo, this.state.registerform.password);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.register();\r\n        alert('Registered Successfully !')\r\n        this.setState({isRegister:true})\r\n    }\r\n\r\n    validateField = (fieldName, value) => {\r\n        let fieldValidationErrors = this.state.registerformErrorMessage;\r\n        let formValid = this.state.registerformValid;\r\n        switch (fieldName) {\r\n            case \"agentNo\":\r\n                let cnoRegex = /^[1-7]\\d{7}$/\r\n                if (!value || value === \"\") {\r\n                    fieldValidationErrors.agentNo = \"Please enter your Agent Number\";\r\n                    formValid.agentNo = false;\r\n                } else if (!value.match(cnoRegex)) {\r\n                    fieldValidationErrors.agentNo = \"Agent number should be a valid 8 digit number\";\r\n                    formValid.agentNo = false;\r\n                } else {\r\n                    fieldValidationErrors.agentNo = \"\";\r\n                    formValid.agentNo = true;\r\n                }\r\n                break;\r\n\r\n            case \"name\":\r\n                if(!value || value === \"\"){\r\n                    fieldValidationErrors.name = \"Please enter your Name\";\r\n                    formValid.name = false;\r\n                }else if(!value.match(/^[A-z]+([ ][A-z]+)*$/)){\r\n                    fieldValidationErrors.name=\"Invalid Name\";\r\n                    formValid.name=false;\r\n                } \r\n                else {\r\n                    fieldValidationErrors.name = \"\";\r\n                    formValid.name = true;\r\n                }\r\n                break;\r\n\r\n            \r\n            case \"email\":\r\n                let emailRegex = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+).([a-zA-Z]{2,5})$/;\r\n                if(!value || value === \"\"){\r\n                    fieldValidationErrors.email = \"Please enter your Email\";\r\n                    formValid.email = false;\r\n                }else if(!value.match(emailRegex)){\r\n                    fieldValidationErrors.email = \"Please enter a valid Email\";\r\n                    formValid.email = false;\r\n                }else {\r\n                    fieldValidationErrors.email = \"\";\r\n                    formValid.email = true;\r\n                }\r\n                break\r\n\r\n            case \"password\":\r\n                if (!value || value === \"\") {\r\n                    fieldValidationErrors.password = \"Password is manadatory\";\r\n                    formValid.password = false;\r\n                     } else if (!(value.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{7,20})/) )) {\r\n                        fieldValidationErrors.password = \"Password must contain atleast 1 Uppercase letter 1 Lowecase letter 1 digit and 1 Special Character\"\r\n                        formValid.password = false;\r\n                } else {\r\n                    fieldValidationErrors.password = \"\";\r\n                    formValid.password = true;\r\n                }\r\n                break;\r\n\r\n            case \"cpassword\":\r\n                if(!value || value ===\"\"){\r\n                    fieldValidationErrors.cpassword = \"Please confirm password\";\r\n                    formValid.cpassword=false;\r\n                }else if(value!==this.state.registerform.password){\r\n                    fieldValidationErrors.cpassword = \"Please enter correct password\";\r\n                    formValid.cpassword = false;\r\n                }else{\r\n                    fieldValidationErrors.cpassword = \"\";\r\n                    formValid.cpassword = true;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        formValid.buttonActive = formValid.agentNo && formValid.password;\r\n        this.setState({\r\n            registerformErrorMessage: fieldValidationErrors,\r\n            registerformValid: formValid,\r\n            successMessage: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.isRegister === true) return <Redirect to={'/login'} />\r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <section id=\"registerPage\" className=\"registerSection\">    \r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-6 offset-3 \">\r\n                            <Paper className={classes.paper} elevation={6}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <PersonAddIcon/>\r\n                                </Avatar>\r\n                                <h4>Register</h4>\r\n                                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                                <div className=\"container-fluid\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"uagentNo\">Agent Number<span className=\"text-danger\">*</span></label>\r\n                                                <input\r\n                                                type=\"number\"\r\n                                                value={this.state.registerform.agentNo}\r\n                                                onChange={this.handleChange}\r\n                                                id=\"uagentNo\"\r\n                                                name=\"agentNo\"\r\n                                                className=\"form-control\"\r\n                                                placeholder=\"Enter Agent Number\"\r\n                                                />\r\n                                            </div>\r\n                                        {this.state.registerformErrorMessage.agentNo ? (<span className=\"text-danger\">\r\n                                        {this.state.registerformErrorMessage.agentNo}\r\n                                        </span>)\r\n                                        : null}\r\n                                        </div>\r\n\r\n                                    <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uname\">Name<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.registerform.name}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uname\"\r\n                                            name=\"name\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Name\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.registerformErrorMessage.name ? (<span className=\"text-danger\">\r\n                                        {this.state.registerformErrorMessage.name}\r\n                                    </span>)\r\n                                        : null}\r\n                                    </div>\r\n                                    </div>   \r\n                                    <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uemail\">Email<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"email\"\r\n                                            value={this.state.registerform.email}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uemail\"\r\n                                            name=\"email\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Email\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.registerformErrorMessage.email ? (<span className=\"text-danger\">\r\n                                        {this.state.registerformErrorMessage.email}\r\n                                    </span>)\r\n                                        : null}\r\n                                    \r\n                \r\n                                    </div>\r\n\r\n                                        <div className=\"col-md-6\">\r\n                                        <div className=\"form-group\">\r\n                                        <label htmlFor=\"udob\">Date Of Birth<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"date\"\r\n                                            value={this.state.registerform.dob}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"udob\"\r\n                                            name=\"dob\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.registerformErrorMessage.dob ? (<span className=\"text-danger\">\r\n                                        {this.state.registerformErrorMessage.dob}\r\n                                    </span>)\r\n                                        : null}\r\n                                        \r\n                                    </div>\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <div className=\"row\">\r\n                                    <div className=\"col-md-6\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uPass\">Password<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            value={this.state.registerform.password}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uPass\"\r\n                                            name=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Enter Password\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.registerformErrorMessage.password ? (<span className=\"text-danger\">\r\n                                        {this.state.registerformErrorMessage.password}\r\n                                    </span>)\r\n                                        : null}\r\n                                        </div>\r\n\r\n\r\n                                    <div className=\"col-md-6\">    \r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uCpass\">Confirm Password<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            value={this.state.registerform.cpassword}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uCpass\"\r\n                                            name=\"cpassword\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Confirm Password\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.registerformErrorMessage.cpassword ? (<span className=\"text-danger\">\r\n                                        {this.state.registerformErrorMessage.cpassword}\r\n                                    </span>)\r\n                                        : null}<br/>\r\n                                        \r\n                                        </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                \r\n                                \r\n                                    \r\n\r\n                                    \r\n                                        \r\n                                        \r\n                                    <span><span className=\"text-danger\">*</span> marked feilds are mandatory</span>\r\n                                    <br />\r\n                                    \r\n\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        disabled={!this.state.registerformValid.buttonActive}\r\n                                        className=\"btn btn-primary\"\r\n                                    >\r\n                                        Register\r\n                                    </button>\r\n                                </form>\r\n                                <br />\r\n                                \r\n                               \r\n                                </Paper>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </section>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(Register);","import React,{ Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Redirect,Link } from 'react-router-dom';\r\n\r\n\r\nconst styles = theme => ({\r\n    \r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginBottom: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      height:'350px',\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\r\n    },\r\n    \r\n\r\n    \r\n    \r\n  });\r\n\r\n\r\n\r\nclass Home extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isClient:false,\r\n            isInsurance:false,\r\n            isLoggedIn:sessionStorage.getItem(\"isLoggedIn\")\r\n        }\r\n    }\r\n\r\n    handleClient=()=>{\r\n        this.setState({isClient:true})\r\n        \r\n    }\r\n\r\n    \r\n\r\n    \r\n\r\n    handleInsurance=()=>{\r\n        this.setState({isInsurance:true})\r\n    }\r\n\r\n    \r\n\r\n\r\n    render(){\r\n        const { classes } = this.props;\r\n\r\n        if(!this.state.isLoggedIn){\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n\r\n        if(this.state.isClient){\r\n            return <Redirect to=\"/home/clientmanagement\"/>\r\n        }\r\n\r\n        if(this.state.isInsurance){\r\n            return <Redirect to=\"/home/insurancemanagement\"/>\r\n        }\r\n\r\n        return(<div className=\"container-fluid\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Link to=\"/home/clientmanagement\" className=\"nav-link\"  onClick={this.handleClient}><h4 style={{color:'secondary'}}>Client Management</h4></Link>\r\n                        <div>\r\n                            <img src={'./assets/client.jpg'} alt=\"Not Found\" height=\"265px\" width=\"620px\" onClick={this.handleClient}/>\r\n                        </div>\r\n                        \r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Link to=\"/home/insurancemanagement\" className=\"nav-link\" onClick={this.handleInsurance}><h4>Insurance Management</h4></Link>\r\n                        <div>\r\n                            <img src={'./assets/insurance.jpg'} alt=\"Not Found\" height=\"265px\" width=\"620px\" onClick={this.handleInsurance}/>\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default withStyles(styles)(Home);","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport { Redirect,Link } from 'react-router-dom';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    \r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginBottom: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      height:'350px',\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\r\n    },\r\n    \r\n\r\n    \r\n    \r\n  });\r\n\r\n\r\n\r\nclass ClientManagement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            isView:false,\r\n            isAdd:false,\r\n            isLoggedIn:sessionStorage.getItem(\"isLoggedIn\")\r\n        }\r\n    }\r\n\r\n    handleView=()=>{\r\n        this.setState({isView:true})\r\n    }\r\n\r\n    handleAdd=()=>{\r\n        this.setState({isAdd:true})\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        const { classes } = this.props;\r\n\r\n        if(!this.state.isLoggedIn){\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n\r\n        if(this.state.isView){\r\n            return <Redirect to=\"/home/clientmanagement/viewclient\"/>\r\n        }\r\n\r\n        if(this.state.isAdd){\r\n            return <Redirect to=\"/home/clientmanagement/addclient\"/>\r\n        }\r\n\r\n        return(<div className=\"container-fluid\">\r\n                <h1>Welcome to Client Management</h1>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    \r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Link to=\"/home/clientmanagement/viewclient\" className=\"nav-link\" onClick={this.handleView}> <h4>View Clients</h4></Link>\r\n                        <div style={{marginTop:\"45px\"}}>\r\n                            <img src={'../assets/viewclient.png'} alt=\"Not Found\" height=\"200px\" width=\"520px\" onClick={this.handleView}/>\r\n                        </div>\r\n                        \r\n                    </Paper>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <Paper elevation={6} className={classes.paper}>\r\n                        <Link to=\"/home/clientmanagement/addclient\" onClick={this.handleAdd} className=\"nav-link\"><h4>Add a Client</h4></Link>\r\n                        <div style={{marginTop:\"45px\"}}>\r\n                            <img src={'../assets/addclient.jpg'} alt=\"Not Found\" height=\"200px\" width=\"520px\" onClick={this.handleAdd}/>\r\n                        </div>\r\n                    </Paper>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(ClientManagement);","\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass InsuranceManagement extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            insuranceData:[],\r\n            errorMsg:'',\r\n            isAllocate:false,\r\n            isLoggedIn:sessionStorage.getItem('isLoggedIn')\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    view=()=>{\r\n        axios.get(\"../insuranceDB.json\").then(response=>{\r\n            console.log(response.data)\r\n            this.setState({insuranceData:response.data,errorMsg:''})\r\n        }).catch(error=>{\r\n            this.setState({errorMsg:error.data})\r\n        })\r\n\r\n    }\r\n\r\n\r\n    componentDidMount=()=>{\r\n        this.view()\r\n    }\r\n\r\n    handleAllocate=()=>{\r\n        this.setState({isAllocate:true})\r\n    }\r\n\r\n\r\n    displayInsurance=()=>{\r\n        let insuranceArray=[]\r\n        let insuranceData = this.state.insuranceData\r\n        for (let insurance of insuranceData){\r\n\r\n            let element = (\r\n                <div className=\"card bg-light text-dark package-card shadow col-md-5\" style={{marginTop:'30px',marginLeft:'70px'}} key ={insurance.insId}>\r\n                    <div className=\"card-body row\">\r\n                        <div>\r\n                        <h4>Insurance Company Name : {insurance.companyname}</h4>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            \r\n                        \r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"featured-text text-center text-lg-left\">\r\n                                \r\n                                <h5 style={{marginTop:'20px'}}>Name : {insurance.name}</h5>\r\n                                <h5>Insurance cover : {insurance.cover}</h5>\r\n                                <h5>Policy Period : {insurance.policyperiod}</h5>\r\n                                <h5>Premium : {insurance.premium}</h5>\r\n                                <h5>Pay for : {insurance.payfor}</h5>\r\n                                <h5>Members Covered : {insurance.memberscovered}</h5>\r\n                                <button className=\"btn btn-primary\" onClick={this.handleAllocate}>Allocate to client</button>\r\n\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        \r\n                        <div className=\"col-md-6\">\r\n                            <img src={\"../assets/\"+insurance.image} alt=\"Not Found\" height='300px' width='200px'/>\r\n                        </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n            insuranceArray.push(element)\r\n        }\r\n\r\n        return insuranceArray\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n\r\n        if(this.state.isAllocate===true){\r\n            return <Redirect to={'/home/insurancemanagement/allocateplan'}/>\r\n        }\r\n\r\n        if(!this.state.isLoggedIn){\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n\r\n        return(<div>\r\n            <h1>Welcome to Insurance Management</h1>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    {this.displayInsurance()}\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default InsuranceManagement;","\r\nimport React, { Component } from 'react'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\n\r\n\r\nclass ViewClient extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            clientData:[],\r\n            errorMsg:'',\r\n            searchData:'',\r\n            isSearch:false,\r\n            isView:false,\r\n            sData:[],\r\n            isLoggedIn:sessionStorage.getItem('isLoggedIn')\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    view=()=>{\r\n        axios.get(\"/clientDB.json\").then(response=>{\r\n            \r\n            this.setState({clientData:response.data,errorMsg:''})\r\n        }).catch(error=>{\r\n            this.setState({errorMsg:error})\r\n        })\r\n\r\n    }\r\n\r\n\r\n    componentDidMount=()=>{\r\n        this.view()\r\n    }\r\n\r\n\r\n    displayClient=(data)=>{\r\n        let clientArray=[]\r\n        \r\n\r\n        if(data.length === 0){\r\n            return <div><h1>Data not found</h1></div>\r\n        }\r\n        \r\n        for (let client of data){\r\n\r\n            let element = (\r\n                <div className=\"card bg-light text-dark package-card shadow col-md-5\" style={{marginTop:'30px',marginLeft:'70px'}} key ={client.clientId}>\r\n                    <div className=\"card-body row\">\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"featured-text text-center text-lg-left\">\r\n                                <h5>Client Name : {client.name}</h5>\r\n                                <h5>Age : {client.age}</h5>\r\n                                <h5>Date Of Birth : {client.dob}</h5>\r\n                                <h5>Email : {client.email}</h5>\r\n                                <h5>Contact No : {client.contactno}</h5>\r\n                                <h5>Plans : <ul>\r\n                                    {client.activePlans.map(plan=>{\r\n                                        return <li>{plan}</li>\r\n                                    })}\r\n                                    </ul></h5>\r\n                                <h5>Monthly Contribution : {client.monthlyContribution}</h5>\r\n\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <img src={client.image} alt=\"Not Found\" height='350px' width='250px'/>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n            clientArray.push(element)\r\n        }\r\n\r\n        return clientArray\r\n    }\r\n\r\n    handleChange=(event)=>{\r\n        let searchValue = event.target.value;\r\n        this.setState({searchData:searchValue})\r\n    }\r\n\r\n    handleSearch=()=>{\r\n        let searchValue = this.state.searchData;\r\n        let clientData = this.state.clientData;\r\n        \r\n        let data = clientData.filter(client=> client.clientId===searchValue || client.name===searchValue)\r\n        this.setState({isSearch:true, sData:data})\r\n        \r\n\r\n    }\r\n\r\n    handleAll=()=>{\r\n        this.state.isView ? this.setState({isView:false}) : this.setState({isView:true});\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        if(!this.state.isLoggedIn){\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        return(<div>\r\n            <h1>Welcome to view Client</h1>\r\n\r\n            <div className=\"container-fluid\">\r\n                <div className=\"card bg-light text-dark package-card shadow\">\r\n                    <div className=\"card-body row\">\r\n                        <div style={{alignItems:'center'}}>\r\n                            <input type=\"text\" placeholder=\"Search a Client\" onChange={this.handleChange}></input>\r\n                        \r\n                        \r\n                            <button className=\"btn btn-primary\" style={{marginLeft:'20px'}} onClick={this.handleSearch}>Search</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n\r\n            {this.state.isSearch ?\r\n            <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                {this.displayClient(this.state.sData)}\r\n                \r\n            </div>\r\n            \r\n        </div> : null}\r\n\r\n\r\n        <div className=\"container-fluid\" style={{marginTop:'20px'}}>\r\n                <div className=\"card bg-light text-dark package-card shadow\">\r\n                    <div className=\"card-body row\">\r\n                        <div style={{alignItems:'center'}}>\r\n                            <button className=\"btn btn-primary\" onClick={this.handleAll}>View All Clients</button>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n\r\n\r\n\r\n        \r\n        {this.state.isView ?\r\n            <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                {this.displayClient(this.state.clientData)}\r\n                \r\n            </div>\r\n            \r\n        </div> : null}\r\n\r\n            \r\n            \r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default ViewClient;","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    \r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginBottom: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\r\n    },\r\n    avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: 'red',\r\n    },\r\n\r\n    \r\n    \r\n  });\r\n\r\n\r\n\r\nclass AddClient extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            clientform: {\r\n                name:\"\",\r\n                dob:\"\",\r\n                \r\n                contactno:\"\",\r\n                email:\"\",\r\n                activeplans:\"\",\r\n                monthlycontribution:\"\"\r\n\r\n            },\r\n            clientformErrorMessage: {\r\n                name:\"\",\r\n                dob:\"\",\r\n                \r\n                contactno:\"\",\r\n                email:\"\",\r\n                activeplans:\"\",\r\n                monthlycontribution:\"\"\r\n            },\r\n            clientformValid: {\r\n                name:false,\r\n                dob:false,\r\n                \r\n                contactno:false,\r\n                email:false,\r\n                \r\n                monthlycontribution:false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            add:false,\r\n            isLoggedIn:sessionStorage.getItem(\"isLoggedIn\")\r\n            \r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        const { clientform } = this.state;\r\n        this.setState({\r\n            clientform: { ...clientform, [name]: value }\r\n        });\r\n        this.validateField(name, value);\r\n        // console.log(this.state.clientform[name], name);\r\n    }\r\n\r\n    client = () => {\r\n        const { clientform } = this.state;\r\n        axios.post(\"./clientDB.json\", clientform)\r\n            .then(response => {\r\n                console.log(response.data.message);\r\n                \r\n                \r\n                \r\n                this.setState({ loadHome: true})\r\n                window.location.reload();\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.errorMessage = error.message;\r\n                sessionStorage.clear();\r\n            })\r\n        console.log(this.state.clientform);\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.client();\r\n        this.setState({add:true})\r\n        alert('Client Added !');\r\n    }\r\n\r\n    validateField = (fieldName, value) => {\r\n        let fieldValidationErrors = this.state.clientformErrorMessage;\r\n        let formValid = this.state.clientformValid;\r\n        switch (fieldName) {\r\n            \r\n\r\n            case \"name\":\r\n                if(!value || value === \"\"){\r\n                    fieldValidationErrors.name = \"Please enter your Name\";\r\n                    formValid.name = false;\r\n                }else if(!value.match(/^[A-z]+([ ][A-z]+)*$/)){\r\n                    fieldValidationErrors.name=\"Invalid Name\";\r\n                    formValid.name=false;\r\n                }\r\n                 else {\r\n                    fieldValidationErrors.name = \"\";\r\n                    formValid.name = true;\r\n                }\r\n                break;\r\n\r\n            \r\n            case \"email\":\r\n                let emailRegex = /^([a-zA-Z0-9_\\-.]+)@([a-zA-Z0-9_\\-.]+)\\.([a-zA-Z]{2,5})$/;\r\n                if(!value || value === \"\"){\r\n                    fieldValidationErrors.email = \"Please enter your Email\";\r\n                    formValid.email = false;\r\n                }else if(!value.match(emailRegex)){\r\n                    fieldValidationErrors.email = \"Please enter a valid Email\";\r\n                    formValid.email = false;\r\n                }else {\r\n                    fieldValidationErrors.email = \"\";\r\n                    formValid.email = true;\r\n                }\r\n                break\r\n\r\n            case \"contactno\":\r\n                if (!value || value === \"\") {\r\n                    fieldValidationErrors.contactno = \"Please enter Contact Number\";\r\n                    formValid.contactno = false;\r\n                     } else if (!(value.match(/^[1-9]\\d{9}$/) )) {\r\n                        fieldValidationErrors.contactno = \"Contact number should be a valid 10 digit number\"\r\n                        formValid.contactno = false;\r\n                } else {\r\n                    fieldValidationErrors.contactno = \"\";\r\n                    formValid.contactno = true;\r\n                }\r\n                break;\r\n\r\n            case \"dob\":\r\n                if(!value || value ===\"\"){\r\n                    fieldValidationErrors.dob = \"Please enter Date Of Birth\";\r\n                    formValid.dob=false;\r\n                \r\n                }else if(!(new Date(value) <= new Date())){\r\n                    fieldValidationErrors.dob = \"Birth date cannot be today or greater than today\";\r\n                    formValid.dob=false;\r\n                }\r\n                else{\r\n                    fieldValidationErrors.dob = \"\";\r\n                    formValid.dob = true;\r\n                }\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n        formValid.buttonActive = formValid.name  && formValid.dob && formValid.contactno && formValid.email;\r\n        this.setState({\r\n            clientformErrorMessage: fieldValidationErrors,\r\n            clientformValid: formValid,\r\n            successMessage: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if(this.state.add){\r\n            return <Redirect to=\"/home/clientmanagement\"/>\r\n        }\r\n\r\n        if(!this.state.isLoggedIn){\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        \r\n        \r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                <section id=\"clientPage\" className=\"clientSection\">    \r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-5 offset-4 \">\r\n                            <Paper className={classes.paper} elevation={6}>\r\n                                <Avatar className={classes.avatar}>\r\n                                    <PersonAddIcon/>\r\n                                </Avatar>\r\n                                <h4>Enter Client Details</h4>\r\n                            \r\n                                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n\r\n                                    <div className=\"container-fluid\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-md-6\">\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"cname\">Client Name<span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={this.state.clientform.name}\r\n                                                        onChange={this.handleChange}\r\n                                                        id=\"uname\"\r\n                                                        name=\"name\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Enter Client Name\"\r\n                                                    />\r\n                                                </div>\r\n                                                {this.state.clientformErrorMessage.name ? (<span className=\"text-danger\">\r\n                                                {this.state.clientformErrorMessage.name}\r\n                                                </span>)\r\n                                                : null}\r\n                                            </div>\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"uemail\">Email<span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        type=\"email\"\r\n                                                        value={this.state.clientform.email}\r\n                                                        onChange={this.handleChange}\r\n                                                        id=\"uemail\"\r\n                                                        name=\"email\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Enter Email\"\r\n                                                    />\r\n                                                </div>\r\n                                                {this.state.clientformErrorMessage.email ? (<span className=\"text-danger\">\r\n                                                {this.state.clientformErrorMessage.email}\r\n                                                </span>)\r\n                                                : null}\r\n                                            </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"uactiveplans\">Active Plans<span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={this.state.clientform.activeplans}\r\n                                                        onChange={this.handleChange}\r\n                                                        id=\"uactiveplans\"\r\n                                                        name=\"activeplans\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Enter Active Plans\"\r\n                                                    />\r\n                                                </div>\r\n                                                {this.state.clientformErrorMessage.activeplans ? (<span className=\"text-danger\">\r\n                                                {this.state.clientformErrorMessage.activeplans}\r\n                                                </span>)\r\n                                                : null}\r\n                                                </div>\r\n\r\n\r\n\r\n\r\n                                            \r\n\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"udob\">Date Of Birth<span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        type=\"date\"\r\n                                                        value={this.state.clientform.dob}\r\n                                                        onChange={this.handleChange}\r\n                                                        id=\"udob\"\r\n                                                        name=\"dob\"\r\n                                                        className=\"form-control\"\r\n                                                    />\r\n                                                </div>\r\n                                                {this.state.clientformErrorMessage.dob ? (<span className=\"text-danger\">\r\n                                                {this.state.clientformErrorMessage.dob}\r\n                                                </span>)\r\n                                                : null}\r\n                                                </div>\r\n\r\n                                            </div>\r\n\r\n\r\n\r\n                                            <div className=\"row\">\r\n\r\n                                            <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"ucontactno\">Contact Number<span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        type=\"number\"\r\n                                                        value={this.state.clientform.contactno}\r\n                                                        onChange={this.handleChange}\r\n                                                        id=\"ucontactno\"\r\n                                                        name=\"contactno\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Enter Contact Number\"\r\n                                                    />\r\n                                                </div>\r\n                                                {this.state.clientformErrorMessage.contactno ? (<span className=\"text-danger\">\r\n                                                {this.state.clientformErrorMessage.contactno}\r\n                                                </span>)\r\n                                                : null}\r\n                                                </div>\r\n\r\n\r\n                                                <div className=\"col-md-6\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"umonthlycontribution\">Monthly Contribution<span className=\"text-danger\">*</span></label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        value={this.state.clientform.monthlycontribution}\r\n                                                        onChange={this.handleChange}\r\n                                                        id=\"umonthlycontribution\"\r\n                                                        name=\"monthlycontribution\"\r\n                                                        className=\"form-control\"\r\n                                                        placeholder=\"Enter Contribution\"\r\n                                                    />\r\n                                                </div>\r\n                                                {this.state.clientformErrorMessage.monthlycontribution ? (<span className=\"text-danger\">\r\n                                                {this.state.clientformErrorMessage.monthlycontribution}\r\n                                                </span>)\r\n                                                : null}<br/>\r\n                                                </div>\r\n\r\n\r\n                                            </div>\r\n\r\n                                            \r\n\r\n                                    </div>    \r\n                                    \r\n\r\n                                    \r\n\r\n                                    \r\n\r\n\r\n                                    \r\n\r\n                                    \r\n                \r\n                                    \r\n\r\n                                    \r\n                                        \r\n                                    \r\n\r\n                                    \r\n                                        \r\n                                        \r\n                                        \r\n                                    <span><span className=\"text-danger\">*</span> marked feilds are mandatory</span>\r\n                                    <br />\r\n                                    \r\n\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        disabled={!this.state.clientformValid.buttonActive}\r\n                                        className=\"btn btn-primary\"\r\n                                    >\r\n                                        Add Client\r\n                                    </button>\r\n                                </form>\r\n                                <br />\r\n                                \r\n                               \r\n                                </Paper>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </section>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AddClient);","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport withStyles from '@material-ui/core/styles/withStyles';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\n\r\nconst styles = theme => ({\r\n    \r\n    paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginBottom: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center',\r\n      padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(3)}px`,\r\n    },\r\n    \r\n\r\n    \r\n    \r\n  });\r\n\r\n\r\n\r\nclass AllocatePlan extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allocateform: {\r\n                clientId: \"\",\r\n                clientName: \"\"\r\n            },\r\n            allocateformErrorMessage: {\r\n                clientId: \"\",\r\n                clientName: \"\"\r\n            },\r\n            allocateformValid: {\r\n                clientId: false,\r\n                clientName: false,\r\n                buttonActive: false\r\n            },\r\n            successMessage: \"\",\r\n            errorMessage: \"\",\r\n            loadinsurance: false,\r\n            isLoggedIn:sessionStorage.getItem(\"isLoggedIn\")\r\n            \r\n            \r\n        }\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n    handleChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        const { allocateform } = this.state;\r\n        this.setState({\r\n            allocateform: { ...allocateform, [name]: value }\r\n        });\r\n        this.validateField(name, value);\r\n        // console.log(this.state.allocateform[name], name);\r\n    }\r\n\r\n    allocate = () => {\r\n        const { allocateform } = this.state;\r\n\r\n        \r\n        axios.post('/allocate', allocateform)\r\n            .then(response => {\r\n                console.log(response);\r\n                \r\n                \r\n                \r\n                window.location.reload();\r\n\r\n            }).catch(error => {\r\n                console.log(error);\r\n                this.errorMessage = error.message;\r\n                \r\n            })\r\n        \r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ loadinsurance: true })\r\n        this.allocate();\r\n        alert('Allocated Successfully !')\r\n    }\r\n\r\n    \r\n\r\n    validateField = (fieldName, value) => {\r\n        let fieldValidationErrors = this.state.allocateformErrorMessage;\r\n        let formValid = this.state.allocateformValid;\r\n        switch (fieldName) {\r\n            case \"clientId\":\r\n                \r\n                if (!value || value === \"\") {\r\n                    fieldValidationErrors.clientId = \"Please enter client Id\";\r\n                    formValid.clientId = false;\r\n                }else {\r\n                    fieldValidationErrors.clientId = \"\";\r\n                    formValid.clientId = true;\r\n                }\r\n                break;\r\n            case \"clientName\":\r\n                if (!value || value === \"\") {\r\n                    fieldValidationErrors.clientName = \"Please enter client name\";\r\n                    formValid.clientName = false;\r\n                     } else {\r\n                    fieldValidationErrors.clientName = \"\";\r\n                    formValid.clientName = true;\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        formValid.buttonActive = formValid.clientId && formValid.clientName;\r\n        this.setState({\r\n            allocateformErrorMessage: fieldValidationErrors,\r\n            allocateformValid: formValid,\r\n            successMessage: \"\"\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loadinsurance === true) return <Redirect to={'/home/insurancemanagement'} />\r\n\r\n        if(!this.state.isLoggedIn){\r\n            return <Redirect to=\"/login\"/>\r\n        }\r\n        \r\n        const { classes } = this.props;\r\n        return (\r\n            <div>\r\n                \r\n                <section id=\"allocatePage\" className=\"allocateSection\">    \r\n                    <div className=\"container-fluid\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4 offset-4 \">\r\n                            <Paper className={classes.paper} elevation={6}>\r\n                                <h1>Allocate</h1>\r\n                            \r\n                                <form className=\"form\" onSubmit={this.handleSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uid\">Client Id<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.allocateform.clientId}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uid\"\r\n                                            name=\"clientId\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.allocateformErrorMessage.clientId ? (<span className=\"text-danger\">\r\n                                        {this.state.allocateformErrorMessage.clientId}\r\n                                    </span>)\r\n                                        : null}\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"uname\">Client Name<span className=\"text-danger\">*</span></label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            value={this.state.allocateform.clientName}\r\n                                            onChange={this.handleChange}\r\n                                            id=\"uname\"\r\n                                            name=\"clientName\"\r\n                                            className=\"form-control\"\r\n                                        />\r\n                                    </div>\r\n                                    {this.state.allocateformErrorMessage.clientName ? (<span className=\"text-danger\">\r\n                                        {this.state.allocateformErrorMessage.clientName}\r\n                                    </span>)\r\n                                        : null}<br />\r\n                                    <span><span className=\"text-danger\">*</span> marked feilds are mandatory</span>\r\n                                    <br />\r\n                                    \r\n\r\n                                    <button\r\n                                        type=\"submit\"\r\n                                        disabled={!this.state.allocateformValid.buttonActive}\r\n                                        className=\"btn btn-primary\"\r\n                                    >\r\n                                        Allocate Plan\r\n                                    </button>\r\n                                </form>\r\n                                <br />\r\n                                \r\n                                </Paper>\r\n                            \r\n                            </div>\r\n                        </div>\r\n                        \r\n                    </div>\r\n                    \r\n                </section>\r\n                \r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(AllocatePlan);","import React,{ Component } from 'react'\r\n\r\n\r\n\r\nclass NotFoundSection extends Component{\r\n\r\n\r\n\r\n    render(){\r\n        return(<div>\r\n            <h1>Page Not Found</h1>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default NotFoundSection;","\nimport './App.css';\nimport Login from './component/Login'\nimport Navbar from './component/Navbar'\nimport Register from './component/Register'\nimport Home from './component/Home'\nimport ClientManagement from './component/ClientManagement'\nimport InsuranceManagement from './component/InsuranceManagement'\nimport ViewClient from './component/ViewClient'\nimport AddClient from './component/AddClient'\nimport AllocatePlan from './component/AllocatePlan'\nimport NotFoundSection from './component/NotFoundSection'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      \n      <Router>\n      <Navbar/>\n      \n        <Switch>\n          <Route exact path='/' component={Login}/>\n          <Route exact path='/login' component={Login}/>\n          <Route exact path='/register' component={Register}/>\n          <Route exact path='/home' component={Home}/>\n          <Route exact path='/home/clientmanagement' component={ClientManagement}/>\n          <Route exact path='/home/clientmanagement/viewclient' component={ViewClient}/>\n          <Route exact path='/home/clientmanagement/addclient' component={AddClient}/>\n          <Route exact path='/home/insurancemanagement' component={InsuranceManagement}/>\n          <Route exact path='/home/insurancemanagement/allocateplan' component={AllocatePlan}/>\n          <Route path = '*' component={NotFoundSection}/>\n        </Switch>\n      </Router>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}